[env]
G_PLUS_PLUS = "g++"

[tasks.floyd-build]
command = "${G_PLUS_PLUS}"
args = [
    "../multi_agent_path_finding/floyd.cpp",
    "-o",
    "bin/floyd.out",
    "-std=c++17",
    "-O0",
    "-Xlinker",
    "-ld_classic",
]

# Apple uses their new linker in macOS Sonoma 14... unfortuantely the linker crashes in a lot of cases (see https://developer.apple.com/forums/thread/737707)
# So we use the old linker for now. ["-Xlinker", "-ld_classic"]

[tasks.floyd-release-build]
command = "${G_PLUS_PLUS}"
args = [
    "../multi_agent_path_finding/floyd.cpp",
    "-o",
    "bin/floyd.out",
    "-std=c++17",
    "-O3",
    "-Xlinker",
    "-ld_classic",
]

[tasks.floyd-release-build-x64]
command = "${G_PLUS_PLUS}"
args = [
    "../multi_agent_path_finding/floyd.cpp",
    "-o",
    "bin/floyd.out",
    "-std=c++17",
    "-O3",
    "-arch",
    "x86_64",
    "-Xlinker",
    "-ld_classic",
]

[tasks.optimization-build]
command = "${G_PLUS_PLUS}"
args = [
    "../multi_agent_path_finding/multi-objective-agent.cpp",
    "-o",
    "bin/optimization.out",
    "-std=c++17",
    "-O0",
    "-Xlinker",
    "-ld_classic",
]

[tasks.optimization-release-build]
command = "${G_PLUS_PLUS}"
args = [
    "../multi_agent_path_finding/multi-objective-agent.cpp",
    "-o",
    "bin/optimization.out",
    "-std=c++17",
    "-O3",
    "-Xlinker",
    "-ld_classic",
]

[tasks.optimization-release-build-x64]
command = "${G_PLUS_PLUS}"
args = [
    "../multi_agent_path_finding/multi-objective-agent.cpp",
    "-o",
    "bin/optimization.out",
    "-std=c++17",
    "-O3",
    "-arch",
    "x86_64",
    "-Xlinker",
    "-ld_classic",
]

[tasks.entry-run]
command = "cargo"
args = ["run"]

[tasks.entry-build]
command = "cargo"
args = ["build"]

[tasks.entry-release-build]
command = "cargo"
args = ["build", "--release"]

[tasks.entry-release-run]
command = "cargo"
args = ["run", "--release"]

[tasks.entry-bundle-build]
env = { OPTIWAY_COMPILE_ENV = "bundle" }
command = "cargo"
args = ["build", "--release", "-Z", "unstable-options", "--out-dir", "bundle/"]

[tasks.entry-bundle-build-x64]
env = { OPTIWAY_COMPILE_ENV = "bundle" }
command = "cargo"
args = [
    "build",
    "--release",
    "-Z",
    "unstable-options",
    "--out-dir",
    "bundle/",
    "--target",
    "x86_64-apple-darwin",
]

[tasks.bundle-clean-dirs]
script_runner = "python"
script_extension = "py"
script = '''
import shutil
import os
for folder in ['bundle', 'bundle/bin', 'bundle/assets']:
    if not os.path.exists(folder):
        os.makedirs(folder)
    else:
        shutil.rmtree(folder)
        os.makedirs(folder)
'''

[tasks.bundle-script]
script_runner = "python"
script_extension = "py"
script = '''
import shutil
import os
shutil.copyfile('bin/floyd.out', 'bundle/bin/floyd.out')
shutil.copyfile('bin/optimization.out', 'bundle/bin/optimization.out')

for root, dirs, files in os.walk('assets'):
    for file in files:
        if file != '.DS_Store':
            if not os.path.exists(os.path.join('bundle', root)):
                os.makedirs(os.path.join('bundle', root))
            shutil.copyfile(os.path.join(root, file), os.path.join('bundle', os.path.join(root, file)))

os.remove('bundle/liboptiway.rlib')
'''

[tasks.bundle-chmod]
command = "chmod"
args = ["-R", "+x", "bundle/"]

[tasks.bundle]
dependencies = [
    "bundle-clean-dirs",
    "floyd-release-build",
    "optimization-release-build",
    "entry-bundle-build",
    "bundle-script",
    "bundle-chmod",
]

[tasks.bundle-x64]
dependencies = [
    "bundle-clean-dirs",
    "floyd-release-build-x64",
    "optimization-release-build-x64",
    "entry-bundle-build-x64",
    "bundle-script",
    "bundle-chmod",
]

[tasks.run]
dependencies = ["floyd-build", "optimization-build", "entry-run"]

[tasks.build]
dependencies = ["floyd-build", "optimization-build", "entry-build"]

[tasks.release]
dependencies = [
    "floyd-release-build",
    "optimization-release-build",
    "entry-release-run",
]
